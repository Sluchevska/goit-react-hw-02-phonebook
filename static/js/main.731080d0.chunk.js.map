{"version":3,"sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App/App.styled.js","components/App/App.js","index.js"],"names":["LabelInput","styled","label","Input","input","Button","button","FormInput","state","contacts","filter","name","number","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","reset","this","type","onChange","pattern","title","required","Component","Span","span","ContactItems","li","ContainerItems","ul","ContactList","onRemove","map","id","onClick","Filter","Container","div","TitleH1","h1","TitleH2","h2","uuidv4","require","v4","App","addContact","find","contact","toLowerCase","alert","newContact","prevState","changeFilter","getVisibleContacts","normalizedFilter","includes","deleteContact","contactId","ContactForm","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.731080d0.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\nexport const LabelInput = styled.label`\r\nfont-weight: 700;\r\nfont-style: italic;\r\nfont-size: 17px;\r\nmargin-right:5px;\r\n`\r\n\r\nexport const Input = styled.input`\r\nmargin-right: 5px;\r\npadding: 5px;\r\n\r\nborder-radius: 5px;\r\nbox-shadow: 1px 2px 3px rgb(85, 42, 85);\r\n`\r\n\r\nexport const Button = styled.button`\r\npadding: 5px;\r\nborder-radius: 5px;\r\nbox-shadow: 3px 2px 3px rgb(85, 42, 85);\r\nfont-size: 14px;\r\nfont-weight:700;\r\n  \r\n`","import { Component } from 'react';\r\nimport { LabelInput, Input, Button } from './ContactForm.styled';\r\n\r\nclass FormInput extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.currentTarget.name]: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <LabelInput>Name</LabelInput>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n\r\n          <LabelInput>Number</LabelInput>\r\n          <Input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n\r\n          <Button type=\"submit\">Add contact</Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormInput;\r\n","import styled from \"@emotion/styled\";\r\nexport const Span = styled.span`\r\nfont-weight: 500;\r\nfont-style: italic;\r\nfont-size: 17px;\r\n`\r\n\r\nexport const Button = styled.button`\r\npadding: 5px;\r\nborder-radius: 5px;\r\nbox-shadow: 3px 2px 3px rgb(85, 42, 85);\r\nfont-size: 14px;\r\nfont-weight:700;\r\n  \r\n`\r\nexport const ContactItems = styled.li`\r\ndisplay: flex;\r\nmax-width: 450px;\r\njustify-content: space-between;\r\n\r\nmargin-bottom:5px;\r\nmargin-left:100px; \r\n`\r\n\r\n\r\nexport const ContainerItems = styled.ul`\r\nmargin-top: 40px;\r\n`","import PropTypes from 'prop-types';\r\n\r\nimport {\r\n  Span,\r\n  Button,\r\n  ContactItems,\r\n  ContainerItems,\r\n} from './ContactList.styled';\r\n\r\nfunction ContactList({ contacts, onRemove }) {\r\n  return (\r\n    <ContainerItems>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactItems key={id} name={name} number={number}>\r\n          <Span>{name}: </Span>\r\n          <Span>{number} </Span>\r\n          <Button type=\"button\" onClick={() => onRemove(id)}>\r\n            {' '}\r\n            Delete contact\r\n          </Button>\r\n        </ContactItems>\r\n      ))}\r\n    </ContainerItems>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ),\r\n  onRemove: PropTypes.func,\r\n};\r\n\r\n// class ContactList extends Component{\r\n//     state = {\r\n//   contacts: [\r\n//     {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n//     {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n//     {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n//     {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n//   ],\r\n//   filter: '',\r\n//   name: '',\r\n//   number: ''\r\n//     }\r\n\r\n//     render() {\r\n\r\n//         return (\r\n//             <ul>\r\n//                 {this.state.contacts.map(({ id, name, number, onRemove }) => (\r\n//                     <li key={id} name={name} number={number}>\r\n//                     <span>{name} </span>\r\n//                         <span>{number} </span>\r\n//                         <button type=\"button\" value={id} onClick={onRemove} > Delete contact</button>\r\n//                     </li>\r\n//                ))}\r\n//             </ul>\r\n//         )\r\n//     }\r\n// }\r\n","import PropTypes from 'prop-types';\r\nimport { Input, LabelInput } from '../ContactForm/ContactForm.styled';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    <LabelInput>Find contact by name</LabelInput>\r\n    <Input type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\nmargin: 20px;\r\n\r\n background: linear-gradient(45deg, rgb(240, 160, 199), rgb(87, 66, 100));\r\npadding: 10px;\r\nwidth: 700px;\r\nbox-shadow: 5px 6px 9px rgb(85, 42, 85);\r\n border-radius: 5px;\r\n text-align: center;\r\n\r\n\r\n\r\n`\r\nexport const TitleH1 = styled.h1`\r\nfont-style: italic;\r\n\r\n\r\n\r\n`\r\n\r\nexport const TitleH2 = styled.h2`\r\nfont-style: italic;\r\nmargin-top:46px;\r\n\r\n\r\n\r\n`","import React from 'react';\n\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport { Container, TitleH1, TitleH2 } from './App.styled';\nimport './App.css';\n\nconst { v4: uuidv4 } = require('uuid');\n\nclass App extends React.Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    if (\n      this.state.contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is alredy in contacts`);\n      return;\n    } else if (this.state.contacts.find(contact => contact.number === number)) {\n      alert(`This number ${number} is alredy in contacts`);\n      return;\n    }\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    this.setState(prevState => ({\n      contacts: [newContact, ...prevState.contacts],\n    }));\n  };\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    return (\n      <Container>\n        <TitleH1>Phonebook</TitleH1>\n        <ContactForm onSubmit={this.addContact} />\n        <TitleH2>Contacts</TitleH2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={this.getVisibleContacts()}\n          onRemove={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/components/App/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}